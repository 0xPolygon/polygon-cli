name: CI
on:
  push:
    branches:
      - "main"
  pull_request:
    branches:
      - "**"
    types: [opened, synchronize]

concurrency:
  group: build-${{ github.event.pull_request.number || github.ref }}
  cancel-in-progress: true

jobs:
  code-quality:
    # source: https://staticcheck.io/docs/running-staticcheck/ci/github-actions/
    name: Code quality
    strategy:
      fail-fast: false
      matrix:
        os: ["windows-latest", "ubuntu-latest", "macOS-latest"]
        go: ["1.16.x", "1.17.x"]
    runs-on: ${{ matrix.os }}
    if: (github.event.action != 'closed' || github.event.pull_request.merged == true)
    steps:
    - uses: actions/checkout@v1
      with:
        fetch-depth: 1
    - uses: WillAbides/setup-go-faster@v1.7.0
      with:
        go-version: ${{ matrix.go }}
    - run: "go test ./..."
    - run: "go vet ./..."
    - uses: dominikh/staticcheck-action@v1.2.0
      with:
        version: "2022.1.1"
        install-go: false
        cache-key: ${{ matrix.go }}
  test:
    if: (github.event.action != 'closed' || github.event.pull_request.merged == true)
    runs-on: ubuntu-latest
    name: Update coverage
    steps:
      - uses: actions/checkout@v3
      
      - uses: actions/setup-go@v3
        with:
          go-version: 1.19.x

      - uses: actions/cache@v3
        with:
          path: |
            ~/.cache/go-build
            ~/Library/Caches/go-build
            ~/go/pkg/mod
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: ${{ runner.os }}-go-

      - name: Run Test
        run: go test -v ./... -covermode=count -coverprofile=coverage.out

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v3
        with:
          token: ${{ secrets.CODECOV_TOKEN }} 
          file: ./coverage.out
          fail_ci_if_error: true # optional (default = false)
          verbose: true # optional (default = false)