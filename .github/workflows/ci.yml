name: ci

on:
  pull_request:
  merge_group:
  push:
    branches: [main]

concurrency:
  group: ci-${{ github.event.pull_request.number || github.ref }}
  cancel-in-progress: true

env:
  GO_VERSION: "1.23" # https://go.dev/dl/
  FOUNDRY_VERSION: stable

jobs:
  lint:
    name: Lint
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-go@v5
        with:
          go-version: ${{ env.GO_VERSION }}
      - name: Install golangci-lint
        run: curl -sSfL https://raw.githubusercontent.com/golangci/golangci-lint/master/install.sh | sh -s -- -b $(go env GOPATH)/bin
      - name: Install shadow
        run: go install golang.org/x/tools/go/analysis/passes/shadow/cmd/shadow@latest
      - name: Run all the linter tools against code
        run: make lint

  gen:
    name: Check generated files
    runs-on: ubuntu-latest
    steps:
      - name: git clone
        uses: actions/checkout@v4
      
      - name: git clone fix
        run: |
          sudo git config --system --add safe.directory $GITHUB_WORKSPACE
          sudo git config --system --add safe.directory /gen

      - name: Try to update generated files
        run: make gen
        
      - name: Check if generated files are up to date
        run: |
          if [[ -n $(git status --porcelain) ]]; then
            echo "‚ùå Error: Generated files are not up to date. Please run \`make gen\`."
            echo "üö® If \`make gen\` doesn't update the contract bytecodes and/or go bindings and this job is still failing, please take a look at the ethereum and foundry versions. We don't pin versions in our ci.yml file but you can do so in Makefile."
            git status --porcelain
            git diff
            exit 1
          else
            echo "‚úÖ Generated files are up to date."
          fi

  test:
    name: Test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-go@v5
        with:
          go-version: ${{ env.GO_VERSION }}
      - name: Run tests
        run: make test

  loadtest:
    name: Run loadtest
    runs-on: ubuntu-latest
    strategy:
      matrix:
        tool: [geth, anvil]
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-go@v5
        with:
          go-version: ${{ env.GO_VERSION }}
      ‚ñã